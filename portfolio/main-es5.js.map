{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/percent-input.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","symbols","targetAnnualRate","investAmount","portfolio","data","localStorage","getItem","json","JSON","parse","name","meanAnnualPercentChange","standardDeviation","window","addEventListener","setItem","stringify","symbol","i","indexOf","splice","push","best","chromosome","Array","length","fill","loss","Number","MAX_VALUE","optimize","toPortfolio","meanAnnualPercent","allocations","softmax","Math","pow","sqrt","map","percent","onAdd","onGenerate","selector","templateUrl","styleUrls","arr","total","reduce","a","b","offspringCount","mutationRate","previous","offsprings","offspring","j","random","result","AppModule","declarations","imports","providers","bootstrap","PercentInputComponent","type","onChange","onTouched","obj","value","parseFloat","toFixed","fn","isDisabled","provide","useExisting","multi","template","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  symbols: PSymbol[] = [];\n  targetAnnualRate = 0;\n  investAmount = 0;\n  portfolio: Portfolio = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const data = localStorage.getItem('data') || '{}';\n    if (data) {\n      const json = JSON.parse(data);\n      this.symbols = json.symbols || [\n        {\n          name: 'SPY',\n          meanAnnualPercentChange: 1.07,\n          standardDeviation: .13,\n        },\n        {\n          name: 'Savings',\n          meanAnnualPercentChange: 1.005,\n          standardDeviation: 0,\n        },\n      ];\n      this.targetAnnualRate = json.targetAnnualRate || 1.032;\n      this.investAmount = json.investAmount || 10000;\n    }\n\n    window.addEventListener('beforeunload', () => {\n      localStorage.setItem('data', JSON.stringify({\n        symbols: this.symbols,\n        targetAnnualRate: this.targetAnnualRate,\n        investAmount: this.investAmount,\n      }));\n    });\n  }\n\n  onRemove(symbol: PSymbol) {\n    const i = this.symbols.indexOf(symbol);\n    this.symbols.splice(i, 1);\n  }\n\n  onAdd() {\n    this.symbols.push({\n      name: '',\n      meanAnnualPercentChange: 1,\n      standardDeviation: 0,\n    });\n  }\n\n  onGenerate() {\n    let best: OptimizeResult = {\n      chromosome: new Array(this.symbols.length).fill(0),\n      loss: Number.MAX_VALUE,\n    };\n\n    for (let i = 0; i < 200; i++) {\n      best = optimize(best, (chromosome) => {\n        const portfolio = this.toPortfolio(chromosome);\n        let loss = this.targetAnnualRate / portfolio.meanAnnualPercent || Number.MAX_VALUE;\n        if (loss <= 1) {\n          loss = portfolio.standardDeviation;\n        }\n        return loss;\n      });\n    }\n\n    this.portfolio = this.toPortfolio(best.chromosome);\n  }\n\n  private toPortfolio(chromosome: Chromosome): Portfolio {\n    const allocations = softmax(chromosome);\n    let meanAnnualPercent = 0;\n    for (let i = 0; i < allocations.length; i++) {\n      meanAnnualPercent += this.symbols[i].meanAnnualPercentChange * allocations[i];\n    }\n    let standardDeviation = 0;\n    for (let i = 0; i < allocations.length; i++) {\n      standardDeviation += Math.pow(this.symbols[i].standardDeviation, 2) * allocations[i];\n    }\n    standardDeviation /= allocations.length;\n    standardDeviation = Math.sqrt(standardDeviation);\n\n    return {\n      allocations: allocations.map((e, i) => ({ name: this.symbols[i].name, percent: e })),\n      meanAnnualPercent,\n      standardDeviation,\n    };\n  }\n}\n\nfunction softmax(arr: number[]): number[] {\n  const total = arr.reduce((a, b) => a + b);\n  return arr.map(e => e / total || 0);\n}\n\nexport interface PSymbol {\n  name: string;\n  meanAnnualPercentChange: number;\n  standardDeviation: number;\n}\n\nconst offspringCount = 100;\nconst mutationRate = .1;\n\nfunction optimize(previous: OptimizeResult, loss: LossFunction): OptimizeResult {\n  let best = previous;\n\n  let offsprings: Chromosome[] = [];\n  for (let i = 0; i < offspringCount; i++) {\n    const offspring: Chromosome = [...best.chromosome];\n    for (let j = 0; j < offspring.length; j++) {\n      if (Math.random() < mutationRate) {\n        offspring[j] = Math.random();\n      }\n    }\n    offsprings.push(offspring);\n  }\n\n  for (const offspring of offsprings) {\n    const result: OptimizeResult = {\n      chromosome: offspring,\n      loss: loss(offspring),\n    };\n\n    if (result.loss < best.loss) {\n      best = result;\n    }\n  }\n\n  return best;\n}\n\ntype Chromosome = number[];\ntype LossFunction = (chromosome: Chromosome) => number;\ntype OptimizeResult = {\n  chromosome: Chromosome,\n  loss: number,\n};\ntype Portfolio = {\n  allocations: { name: string, percent: number }[],\n  meanAnnualPercent: number,\n  standardDeviation: number,\n};","<table>\n  <thead>\n    <tr>\n      <th>Symbol</th>\n      <th>Mean annual %</th>\n      <th>Standard deviation</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let symbol of symbols\">\n      <td><input type=\"text\" [(ngModel)]=\"symbol.name\"></td>\n      <td><percent-input type=\"change\" [(ngModel)]=\"symbol.meanAnnualPercentChange\"></percent-input></td>\n      <td><percent-input [(ngModel)]=\"symbol.standardDeviation\"></percent-input></td>\n      <td><button (click)=\"onRemove(symbol)\">-</button></td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <td><button (click)=\"onAdd()\">+</button></td>\n    </tr>\n  </tfoot>\n</table>\n<table>\n  <tr>\n    <th>Target annual %</th>\n    <td><percent-input type=\"change\" [(ngModel)]=\"targetAnnualRate\"></percent-input></td>\n  </tr>\n  <tr>\n    <th>Amount to invest</th>\n    <td><input type=\"number\" [(ngModel)]=\"investAmount\"></td>\n  </tr>\n</table>\n\n<div>\n  <button (click)=\"onGenerate()\">Generate</button>\n</div>\n\n<div *ngIf=\"portfolio\">\n  <h1>Allocations</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Symbol</th>\n        <th>%</th>\n        <th>$</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let allocation of portfolio.allocations\">\n        <td>{{allocation.name}}</td>\n        <td>{{allocation.percent | percent}}</td>\n        <td>{{investAmount * allocation.percent | currency}}</td>\n      </tr>\n    </tbody>\n  </table>\n  <h1>Gain vs Risk</h1>\n  <table>\n    <tr>\n      <th>Mean annual %</th>\n      <td>{{portfolio.meanAnnualPercent-1 | percent}}</td>\n    </tr>\n    <tr>\n      <th>Standard deviation</th>\n      <td>{{portfolio.standardDeviation | percent}}</td>\n    </tr>\n  </table>\n</div>","import { PercentInputComponent } from './percent-input.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PercentInputComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'percent-input',\n  template: `<input type=\"number\" \n    [(ngModel)]=\"value\" \n    (change)=\"onChange()\" \n    (blur)=\"onTouched()\">`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PercentInputComponent),\n      multi: true,\n    }\n  ],\n})\nexport class PercentInputComponent implements ControlValueAccessor {\n  @Input()\n  type: 'percent' | 'change' = 'percent';\n\n  value?: number;\n  onChange = () => { };\n  onTouched = () => { };\n\n  writeValue(obj: any): void {\n    if (this.type === 'change') {\n      obj -= 1;\n    }\n    this.value = obj * 100;\n    this.value = parseFloat(this.value.toFixed(4));\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = () => {\n      let value = this.value / 100;\n      if (this.type === 'change') {\n        value += 1;\n      }\n      fn(value);\n    };\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}