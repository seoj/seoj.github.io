{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/percent-input.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  symbols: PSymbol[] = [];\n  targetAnnualRate = 0;\n  investAmount = 0;\n  portfolio: Portfolio = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const data = localStorage.getItem('data') || '{}';\n    if (data) {\n      const json = JSON.parse(data);\n      this.symbols = json.symbols || [\n        {\n          name: 'SPY',\n          meanAnnualPercentChange: 1.07,\n          standardDeviation: .13,\n        },\n        {\n          name: 'Savings',\n          meanAnnualPercentChange: 1.005,\n          standardDeviation: 0,\n        },\n      ];\n      this.targetAnnualRate = json.targetAnnualRate || 1.032;\n      this.investAmount = json.investAmount || 10000;\n    }\n\n    window.addEventListener('beforeunload', () => {\n      localStorage.setItem('data', JSON.stringify({\n        symbols: this.symbols,\n        targetAnnualRate: this.targetAnnualRate,\n        investAmount: this.investAmount,\n      }));\n    });\n  }\n\n  onRemove(symbol: PSymbol) {\n    const i = this.symbols.indexOf(symbol);\n    this.symbols.splice(i, 1);\n  }\n\n  onAdd() {\n    this.symbols.push({\n      name: '',\n      meanAnnualPercentChange: 1,\n      standardDeviation: 0,\n    });\n  }\n\n  onGenerate() {\n    let best: OptimizeResult = {\n      chromosome: new Array(this.symbols.length).fill(0),\n      loss: Number.MAX_VALUE,\n    };\n\n    for (let i = 0; i < 200; i++) {\n      best = optimize(best, (chromosome) => {\n        const portfolio = this.toPortfolio(chromosome);\n        let loss = this.targetAnnualRate / portfolio.meanAnnualPercent || Number.MAX_VALUE;\n        if (loss <= 1) {\n          loss = portfolio.standardDeviation;\n        }\n        return loss;\n      });\n    }\n\n    this.portfolio = this.toPortfolio(best.chromosome);\n  }\n\n  private toPortfolio(chromosome: Chromosome): Portfolio {\n    const allocations = softmax(chromosome);\n    let meanAnnualPercent = 0;\n    for (let i = 0; i < allocations.length; i++) {\n      meanAnnualPercent += this.symbols[i].meanAnnualPercentChange * allocations[i];\n    }\n    let standardDeviation = 0;\n    for (let i = 0; i < allocations.length; i++) {\n      standardDeviation += Math.pow(this.symbols[i].standardDeviation, 2) * allocations[i];\n    }\n    standardDeviation /= allocations.length;\n    standardDeviation = Math.sqrt(standardDeviation);\n\n    return {\n      allocations: allocations.map((e, i) => ({ name: this.symbols[i].name, percent: e })),\n      meanAnnualPercent,\n      standardDeviation,\n    };\n  }\n}\n\nfunction softmax(arr: number[]): number[] {\n  const total = arr.reduce((a, b) => a + b);\n  return arr.map(e => e / total || 0);\n}\n\nexport interface PSymbol {\n  name: string;\n  meanAnnualPercentChange: number;\n  standardDeviation: number;\n}\n\nconst offspringCount = 100;\nconst mutationRate = .1;\n\nfunction optimize(previous: OptimizeResult, loss: LossFunction): OptimizeResult {\n  let best = previous;\n\n  let offsprings: Chromosome[] = [];\n  for (let i = 0; i < offspringCount; i++) {\n    const offspring: Chromosome = [...best.chromosome];\n    for (let j = 0; j < offspring.length; j++) {\n      if (Math.random() < mutationRate) {\n        offspring[j] = Math.random();\n      }\n    }\n    offsprings.push(offspring);\n  }\n\n  for (const offspring of offsprings) {\n    const result: OptimizeResult = {\n      chromosome: offspring,\n      loss: loss(offspring),\n    };\n\n    if (result.loss < best.loss) {\n      best = result;\n    }\n  }\n\n  return best;\n}\n\ntype Chromosome = number[];\ntype LossFunction = (chromosome: Chromosome) => number;\ntype OptimizeResult = {\n  chromosome: Chromosome,\n  loss: number,\n};\ntype Portfolio = {\n  allocations: { name: string, percent: number }[],\n  meanAnnualPercent: number,\n  standardDeviation: number,\n};","<table>\n  <thead>\n    <tr>\n      <th>Symbol</th>\n      <th>Mean annual %</th>\n      <th>Standard deviation</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let symbol of symbols\">\n      <td><input type=\"text\" [(ngModel)]=\"symbol.name\"></td>\n      <td><percent-input type=\"change\" [(ngModel)]=\"symbol.meanAnnualPercentChange\"></percent-input></td>\n      <td><percent-input [(ngModel)]=\"symbol.standardDeviation\"></percent-input></td>\n      <td><button (click)=\"onRemove(symbol)\">-</button></td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <td><button (click)=\"onAdd()\">+</button></td>\n    </tr>\n  </tfoot>\n</table>\n<table>\n  <tr>\n    <th>Target annual %</th>\n    <td><percent-input type=\"change\" [(ngModel)]=\"targetAnnualRate\"></percent-input></td>\n  </tr>\n  <tr>\n    <th>Amount to invest</th>\n    <td><input type=\"number\" [(ngModel)]=\"investAmount\"></td>\n  </tr>\n</table>\n\n<div>\n  <button (click)=\"onGenerate()\">Generate</button>\n</div>\n\n<div *ngIf=\"portfolio\">\n  <h1>Allocations</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Symbol</th>\n        <th>%</th>\n        <th>$</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let allocation of portfolio.allocations\">\n        <td>{{allocation.name}}</td>\n        <td>{{allocation.percent | percent:'0.0-2'}}</td>\n        <td>{{investAmount * allocation.percent | currency}}</td>\n      </tr>\n    </tbody>\n  </table>\n  <h1>Gain vs Risk</h1>\n  <table>\n    <tr>\n      <th>Mean annual %</th>\n      <td>{{portfolio.meanAnnualPercent-1 | percent:'0.0-2'}}</td>\n    </tr>\n    <tr>\n      <th>Standard deviation</th>\n      <td>{{portfolio.standardDeviation | percent:'0.0-2'}}</td>\n    </tr>\n  </table>\n</div>","import { PercentInputComponent } from './percent-input.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PercentInputComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'percent-input',\n  template: `<input type=\"number\" \n    [(ngModel)]=\"value\" \n    (change)=\"onChange()\" \n    (blur)=\"onTouched()\">`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PercentInputComponent),\n      multi: true,\n    }\n  ],\n})\nexport class PercentInputComponent implements ControlValueAccessor {\n  @Input()\n  type: 'percent' | 'change' = 'percent';\n\n  value?: number;\n  onChange = () => { };\n  onTouched = () => { };\n\n  writeValue(obj: any): void {\n    if (this.type === 'change') {\n      obj -= 1;\n    }\n    this.value = obj * 100;\n    this.value = parseFloat(this.value.toFixed(4));\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = () => {\n      let value = this.value / 100;\n      if (this.type === 'change') {\n        value += 1;\n      }\n      fn(value);\n    };\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}